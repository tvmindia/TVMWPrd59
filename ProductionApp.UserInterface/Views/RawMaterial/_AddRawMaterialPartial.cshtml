@model ProductionApp.UserInterface.Models.RawMaterialViewModel

@using (Ajax.BeginForm("InsertUpdateRawMaterial", "RawMaterial", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessRawMaterial", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormRawMaterial" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
    @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "" })
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.MaterialCode, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.MaterialCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MaterialCode, "", new { @class = "text-danger" })
                </div>
            </div>  
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.MaterialType, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @{Html.RenderAction("MaterialTypeDropdown", "MaterialType",Model.MaterialType);}
                    <span class="text-danger field-validation-error" data-valmsg-for="MaterialTypeCode" data-valmsg-replace="true"><span for="MaterialTypeCode" class="">The MaterialType Code field is required.</span></span>
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
               <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
               </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.UnitCode, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @{Html.RenderAction("UnitDropdown", "Unit", Model.Unit);}
                    <span class="text-danger field-validation-error" data-valmsg-for="UnitCode" data-valmsg-replace="true"><span for="MaterialTypeCode" class="">The Unit Code field is required.</span></span>
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ReorderQty, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ReorderQty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReorderQty, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-12">
                <input type="submit" value="Save Changes" id="btnSaveMaster"  class="btn btn-info" style="margin-left:5%" />
                <img src="~/Content/images/MasterLoading.gif" id="imgMasterLoading" style="display:none" />
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormRawMaterial");
    });
</script>