@model ProductionApp.UserInterface.Models.ChartOfAccountViewModel

@using (Ajax.BeginForm("InsertUpdateChartOfAccount", "ChartOfAccount", null, new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessChartOfAccount", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnMasterBegin", OnComplete = "OnMasterComplete" }, new { @class = "form-horizontal", role = "form", id = "FormChartOfAccount" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.TypeDesc, htmlAttributes: new { @class = "control-label" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.EditorFor(model => model.TypeDesc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeDesc, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group col-md-12">
            <div class="col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.IsSubHeadApplicable, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
            </div>
            <div class="col-md-12">
                <div class="col-md-12">
                            @Html.RadioButtonFor(model => model.IsSubHeadApplicable, "true", new {  @name = "a",  @checked = "checked" })
                            <label for="rdoFeatures">Yes</label>
                            @Html.RadioButtonFor(model => model.IsSubHeadApplicable, "false", new { @name = "a" })
                            <label for="rdoTotalAssets">No</label>
                            @Html.ValidationMessageFor(model => model.IsSubHeadApplicable, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

        <div class="form-group">
            <div class="col-md-12">
                <div class="col-md-11" style="margin-bottom: 2%;margin-top: 10px;">
                    <button type="submit" id="btnSaveMaster" class="btn btn-info pull-right" style="margin-right:-13px;">Save Changes <i class="fa fa-spinner fa-spin" id="imgMasterLoading" style="display:none;"></i></button>
                </div>
            </div>
        </div>
    </div>
}
<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#FormChartOfAccount");
    });
</script>
