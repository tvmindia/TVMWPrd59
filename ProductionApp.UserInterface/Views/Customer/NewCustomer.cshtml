@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.CustomerViewModel

@{
    if (Model.IsUpdate)
    {
        ViewBag.Title = "Edit Customer";
    }
    else
    {
        ViewBag.Title = "Add Customer";
    }
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")

}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="../DashboardMaster?code=MSTR"><i class="fa fa-cogs"></i> Masters</a></li>
        <li><i class=""></i> Customer</li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>

<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-6">
            <span id="lblCustumerNo" class="SCHeader"></span>
        </div>
        <div class="col-md-6" id="divbuttonPatchAddCustomer" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "Customer", data);
            }
        </div>
    </div>
            <div class="row tableContainer">
                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
                    @using (Ajax.BeginForm("InsertUpdateCustomer", "Customer", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessCustomer", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "CustomersForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                        @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })

                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Contact Details</div>

                        <div class="form-group col-md-12">
                            <div class="col-md-2 no-left-padding">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ContactTitle, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.ContactTitle, Model.ContactTitleList, "-- Select Title --", new { @class = "form-control BlockEnter", value = -1, style = "padding:4px 12px;" })
                                    @Html.ValidationMessageFor(model => model.ContactTitle, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ContactPerson, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-md-12"></div>
                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label " })
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="col-md-3 no-left-padding">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.LandLine, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.LandLine, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.LandLine, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Fax, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Fax, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.Fax, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.OtherPhoneNumbers, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.OtherPhoneNumbers, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                    @Html.ValidationMessageFor(model => model.OtherPhoneNumbers, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Addresses</div>

                        <div class="form-group col-md-12">
                            <div class="col-md-6 no-left-padding">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.BillingAddress, 5, 80, new { @class = "form-control HeaderBox" })
                                    @Html.ValidationMessageFor(model => model.BillingAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.ShippingAddress, 5, 80, new { @class = "form-control HeaderBox" })
                                    @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Other Details</div>

                                <div class="form-group col-md-12">
                                    <div class="col-md-6 no-left-padding">
                                        <div class="col-md-6 no-left-padding">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => model.PaymentTermCode, htmlAttributes: new { @class = "control-label " })
                                            </div>
                                            <div class="col-md-12 ">
                                                    @Html.Action("PaymentTermDropdown", "PaymentTerm")
                                                
                                                @*@Html.EditorFor(model => model.PaymentTermCode, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                                @Html.ValidationMessageFor(model => model.PaymentTermCode, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                        <div class="col-md-6 no-right-padding">
                                            <div class="col-md-12">
                                                @Html.LabelFor(model => model.TaxRegNo, htmlAttributes: new { @class = "control-label " })
                                            </div>
                                            <div class="col-md-12">
                                                @Html.EditorFor(model => model.TaxRegNo, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                                @Html.ValidationMessageFor(model => model.TaxRegNo, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="col-md-12">
                                            @Html.LabelFor(model => model.PANNo, htmlAttributes: new { @class = "control-label " })
                                        </div>
                                        <div class="col-md-12">
                                            @Html.EditorFor(model => model.PANNo, new { htmlAttributes = new { @class = "form-control BlockEnter", @autofocus = true } })
                                            @Html.ValidationMessageFor(model => model.PANNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group col-md-12">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label " })
                                    </div>
                                    <div class="col-md-12">
                                        @Html.TextAreaFor(model => model.GeneralNotes, 5, 180,new { @class = "form-control HeaderBox"  })
                                        @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>
                                <div class="col-md-12  ">&nbsp;</div>

                                <div class="form-group" hidden="hidden">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                                    </div>
                                </div>
                    }
                </div>

    <div class="preloader" id="prelaoder">
        <div class="col-md-12">
            <div class="col-md-12">Loading </div>
            <div class="col-md-12" style="margin-left:5%;margin-top:-3%;"><img src="~/Content/images/loading.gif" class="preloaderImg" /></div>
        </div>
    </div>
</section>



@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/CustomerJS/NewCustomer")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
}

