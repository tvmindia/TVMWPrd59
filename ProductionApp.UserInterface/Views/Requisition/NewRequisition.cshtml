@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.RequisitionViewModel
@{
    ViewBag.Title = "New Requisition";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Requisitions</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<!-- Main content -->
<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-6" style="text-align:left">
            <span id="lblReqNo" class="SCHeader">Requisition# : New</span>
        </div>
        <div class="col-md-6" id="divbuttonPatchAddRequisition" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
            @Html.Action("ChangeButtonStyle", "Requisition", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">
        <div class="clearfix visible-sm-block"></div>
    </div>
    <div class="row">
        &nbsp;
    </div>
    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
    @using (Ajax.BeginForm("InsertUpdateRequisition", "Requisition", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessRequisition", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "RequisitionForm" }))
    {
        @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
        @*@Html.HiddenFor(model => model.ViewOnly, htmlAttributes: new { @class = "", Value = ViewBag.viewOnly })*@
        @*@Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })*@
    <div class="col-md-12">
        <div class="form-group col-md-8">
            @*<div class="form-group col-md-6">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ReqNo, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReqNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled", @placeholder = "Autogenerated" } })
                        @Html.ValidationMessageFor(model => model.ReqNo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1"></div>
                    <div class="col-md-1"></div>
                </div>
            </div>*@
     
            <div class="form-group col-md-12"></div>
            <div class="form-group col-md-6">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ReqDateFormatted, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReqDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                        @Html.ValidationMessageFor(model => model.ReqDateFormatted, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1 mandatory"></div>
                </div>
            </div>

            <div class="form-group col-md-6">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ReqStatus, htmlAttributes: new { @class = "control-label " })
                </div>
                <div class="col-md-12">
                    <div class="col-md-11">
                        @{
                            List<SelectListItem> RequisitionStatus = new List<SelectListItem>();
                            RequisitionStatus.Add(new SelectListItem
                            { Text = "Open", Value = "Open", Selected = true });
                            RequisitionStatus.Add(new SelectListItem
                            { Text = "Closed", Value = "Closed" });
                        }
                        @Html.DropDownListFor(model => model.ReqStatus, RequisitionStatus, new { @class = "form-control", style = "padding:4px 12px;" })
                        @Html.ValidationMessageFor(model => model.ReqStatus, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1"></div>
                </div>
            </div>
            <div class="form-group col-md-12"></div>
            <div class="form-group col-md-12">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    <div class="col-md-11">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1 mandatory"></div>
                </div>
            </div>



        </div>
        <div class="form-group col-md-4" style="padding-left:2%;border-left:1px solid #c2dee0;white-space:nowrap;">
           <div class="form-group col-md-12 box-header figuresummary rounded">
               Document Status Block
           </div>
        </div>
    </div>
    }

        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>
        <div class="col-md-12">
            <div class="col-md-11">
            </div>
            <div class="col-md-1">
                <a class="btn btn-openid" onclick="" id="btnAddRequisitionItems" style="color:white;font-weight:bold"><i class="glyphicon"></i>Add</a>
            </div>
        </div>  
        <div class="col-md-12">
            <table id="tblRequisitionDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>Code</th>
                        <th>Description</th>
                        <th>Additional Information</th>
                        <th>Current Stock</th>
                        <th>Requested Qty</th>
                        <th>Approximate Rate</th>
                        <th>...</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>

</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/RequisitionJS/NewRequisition")
}
