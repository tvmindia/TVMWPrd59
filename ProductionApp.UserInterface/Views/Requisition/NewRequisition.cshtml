@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.RequisitionViewModel
@using ProductionApp.UserInterface.Models
@{
    if (Model.IsUpdate)
    {
        ViewBag.Title = "Edit Requisition";
    }
    else
    {
        ViewBag.Title = "Add Requisition";
    }
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")

}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Requisitions</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<!-- Main content -->
<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-5">
            <span id="lblReqNo" class="SCHeader"></span>
        </div>
        <div class="col-md-7" id="divbuttonPatchAddRequisition" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "Requisition", data);
            }
        </div>
    </div>

    @* THE DOCTYPE VARIES FOR EACH PAGE MAKE SURE TO ADD ApprovalHistory JS FROM SCRIPT BUNDLE IN THE SAME PAGE*@
    @Html.Action("AboutApprovalHistory", "DocumentApproval", new { id=Model.ID, docType="REQ" })

    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
        @using (Ajax.BeginForm("InsertUpdateRequisition", "Requisition", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessRequisition", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "RequisitionForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
            @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
            @Html.HiddenFor(model => model.LatestApprovalStatus)
            @Html.HiddenFor(model => model.LatestApprovalID)
            @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })
            <div class="col-md-12">
                <div class="form-group col-md-8">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReqNo, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ReqNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled", @placeholder = "Autogenerated" } })
                            @Html.ValidationMessageFor(model => model.ReqNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReqDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ReqDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                            @Html.ValidationMessageFor(model => model.ReqDateFormatted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionBy, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.Action("EmployeeDropdown", "Employee")
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReqStatus, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @{
                                List<SelectListItem> RequisitionStatus = new List<SelectListItem>();
                                RequisitionStatus.Add(new SelectListItem
                                { Text = "Open", Value = "Open", Selected = true });
                                RequisitionStatus.Add(new SelectListItem
                                { Text = "Closed", Value = "Closed" });
                            }
                            @Html.DropDownListFor(model => model.ReqStatus, RequisitionStatus, new { @class = "form-control", style = "padding:4px 12px;" })
                            @Html.ValidationMessageFor(model => model.ReqStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-11 remove-padding-right">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div class="form-group col-md-12 box-header figuresummary rounded">
                        <div class="col-md-12">
                            <div class="col-md-12  ">&nbsp;</div>
                            <div class="col-md-12  ">&nbsp;</div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="rightAmtCaption">Requisition Status</div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="lblStatusDisplay" id="lblReqStatus">Open</div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="rightAmtCaption">Approval Status</div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="lblStatusDisplay" id="lblApprovalStatus">N/A</div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })
                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
                                }

        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>
        <div class="col-md-12" style="padding-bottom:3px">
            <div class="col-md-10">
            </div>
            <div class="col-md-2">
                <a class="btn btn-openid" onclick="ShowRequisitionDetailsModal()" id="btnAddRequisitionItems" style="color:white;font-weight:bold;float:right"><i class="glyphicon glyphicon-plus"></i> Add Item </a>
            </div>
        </div>
        <div class="col-md-12">
            <table id="tblRequisitionDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" style="width:100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>Material ID</th>
                        <th>Sl.No</th>
                        <th>Material Code</th>
                        <th>Description</th>
                        <th>Current Stock</th>
                        <th>Requested Qty</th>
                        <th>Approximate Rate</th>
                        <th>...</th>
                    </tr>
                </thead>
            </table>
        </div>
        <div>
            @Html.Partial("_Fileupload")
        </div>
        <div class="col-md-12  ">&nbsp;</div>
        <div class="col-md-12  ">&nbsp;</div>
    </div>
</section>

<!-- Modal Add/Edit Requisition Details Modal -->
<div class="modal fade bs-example-modal-lg" id="RequisitionDetailsModal" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:900px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 40px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <div class="col-md-12 modelIcon">
                            <h3 class="modal-title" id="modelContextLabel">Add Requisition Details</h3>
                        </div>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.MaterialID, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            <div id="divRawMaterialDropdown">
                                @{Html.RenderAction("MaterialDropdown", "Material", Model.RequisitionDetail.Material); }
                            </div>

                        </div>
                    </div>
                    <div class="col-md-12 headSeperator"></div>

                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.Material.MaterialCode, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RequisitionDetail.Material.MaterialCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.Description, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RequisitionDetail.Description, new { htmlAttributes = new { @class = "form-control", @rows = 5 } })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.ApproximateRate, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RequisitionDetail.ApproximateRate, new { htmlAttributes = new { @class = "form-control HeaderBox text-right", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.Material.CurrentStock, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RequisitionDetail.Material.CurrentStock, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.RequisitionDetail.RequestedQty, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.RequisitionDetail.RequestedQty, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="AddRequisitionDetails()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>
            </div>
        </div>
    </div>
</div>


<!-- Modal Send Approval Modal -->
<div class="modal fade bs-example-modal-lg" id="SendApprovalModal" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-sm" role="document" style="min-width:500px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 40px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <div class="col-md-12 modelIcon">
                            <h3 class="modal-title" id="modelContextLabel">Send Approval Details</h3>
                        </div>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    @{
                        DocumentApprovalViewModel documentApprovalVM = new DocumentApprovalViewModel();
                        documentApprovalVM.DocumentType = "REQ";
                        @Html.Action("GetApprovers", "DocumentApproval", documentApprovalVM);
                    }
                </div>
            </div>
            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a class="btn btn-primary" onclick="SendForApproval('REQ')"><i class="glyphicon glyphicon-floppy-disk"></i> Send For Approval</a>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/RequisitionJS/NewRequisition")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/DocumentApproval/ApprovalHistory")
}
