@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.DocumentApprovalAdvanceSearchViewModel

@{
    ViewBag.Title = "Pending Documents";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="/DocumentApproval/ViewPendingDocuments?Code=APR&Name=MyApprovals"><i class="fa fa-cogs"></i>&nbsp;My Approvals</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<section class="content">
    <div class="row">
        <div class="" id="" style="min-height:25px">

            @{
                var data = new { actionType = "List" };
                @Html.Action("ChangeButtonStyle", "DocumentApproval", data);
            }
        </div>
    </div>
     

    <div class="row tableContainer" style="vertical-align:bottom">
        <div class="form-group col-md-8">
            <div class="col-md-12">
                @Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                </div>
                <div class="col-md-2">

                    <a class="btn btn-primary" style="right:-750px;" value="Search" onclick="BindOrReloadPurchaseOrderTable('Search')">Search</a>
                </div>
            </div>
        </div>
        <div class="form-group col-md-4" style="padding-top:50px;" >
           
            <div class="col-md-12">
               
                <p id="filter" style="float:right;font-size:small"><i class="fa fa-filter advanceFilterLink" aria-hidden="true"></i>&nbsp;<a href="#demo" class="accordion" data-toggle="collapse" aria-expanded="false" aria-controls="demo">Advanced Filter</a></p>
            </div>
                
            </div>
    </div>
    <div class="row tableContainer" >
        
        
        <div class="form-group col-md-12 collapse" id="demo"   >
             <div style="border-top:1px solid #d9d9d9;margin-left: 15px;" class="form-group col-md-12" ></div>
                <div class="col-md-5">
                    @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3" } })
                    </div>
                </div>

                <div class="col-md-5">
                    @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3" } })
                    </div>
                </div>
            <div class="col-md-2"> </div>

                <div class="col-md-5">
                    @Html.LabelFor(model => model.DocumentType, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @Html.Action("DocumentTypeDropdown", "DocumentType")
                    </div>
                </div>
                <div class="col-md-5" title="By default only current level approval pending documents are displayed">
                    @Html.LabelFor(model => model.ShowAll, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> selectListItem = new List<SelectListItem>();
                         
                            selectListItem.Add(new SelectListItem
                            { Text = "No", Value = "false", Selected = true });
                            selectListItem.Add(new SelectListItem
                            { Text = "Yes", Value = "true", Selected = false });
                        }
                        @Html.DropDownListFor(model => model.ShowAll, selectListItem, new { @class = "form-control BlockEnter" })
                    </div>

                </div>

                <div class="col-md-2">
                    <a class="btn btn-primary" style="right:-750px;margin-top:20px" onclick="BindOrReloadDocumetApprovals('Apply')">Apply</a>
                </div>
            <div  class="form-group col-md-12"></div>
        </div>
     </div>

           
            <div class="col-md-12">
                <table id="tblPendingDocuments" class="table table-striped table-bordered table-hover customgrd" cellspacing="0"  style="width:100%">
                    <thead>
                        <tr class="text-center TableHead">
                            <th style="display:none">ID</th>
                            <th style="display:none">DocumentTypeCode</th>
                            <th>Document Type</th>
                            <th>Document No</th>
                            <th>Document Date</th>
                            <th>Approval Level</th>
                            <th>Created By</th>
                            @*<th>Created Date</th>*@
                            <th>...</th>
                    </thead>
                </table>
            </div>

</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/DocumentApproval/ViewPendingDocuments")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
}
