@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.SalesOrderViewModel
@{
    if (Model.IsUpdate)
    {
        ViewBag.Title = "Edit Sales Order";
    }
    else
    {
        ViewBag.Title = "Add Sales Order";
    }
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")

}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Sales Order</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<!-- Main content -->
<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-6">
            <span id="lblSalesOrderNo" class="SCHeader"></span>
        </div>
        <div class="col-md-6" id="divbuttonPatchAddSalesOrder" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "SalesOrder", data);
            }
        </div>
    </div>
    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
        @using (Ajax.BeginForm("InsertUpdateSalesOrder", "SalesOrder", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessSalesOrder", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "SalesOrderForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
            @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
            @*@Html.HiddenFor(model => model.LatestApprovalStatus)
                @Html.HiddenFor(model => model.LatestApprovalID)*@
            @Html.HiddenFor(model => model.hdnFileID, htmlAttributes: new { @class = "", @id = "hdnFileDupID", @value = Guid.Empty })
            <div class="col-md-12">
                <div class="form-group col-md-8">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.OrderNo, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.OrderNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled", @placeholder = "Autogenerated" } })
                            @Html.ValidationMessageFor(model => model.OrderNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.OrderDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.OrderDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                            @Html.ValidationMessageFor(model => model.OrderDateFormatted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.CustomerID, htmlAttributes: new { @class = "control-label lblrequired " })
                        </div>
                        <div class="col-md-12" id="divCustomerDropdown">
                            <span class="form-control"> <i class="fa fa-spinner fa-spin"> </i></span>
                            @* binding from javascript document ready function using div id *@
                        </div>
                        @Html.HiddenFor(model => model.CustomerID, htmlAttributes: new { @class = "", @id = "hdnCustomerID" })
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesPerson, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12" id="divEmployeeDropdown">
                            <span class="form-control"> <i class="fa fa-spinner fa-spin"> </i></span>
                            @* binding from javascript document ready function using div id *@
                        </div>
                        @Html.HiddenFor(model => model.EmployeeID, htmlAttributes: new { @class = "", @id = "hdnEmployeeID" })
                    </div>
                    <div class="col-md-12"></div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.BillingAddress, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.BillingAddress, new { @class = "form-control HeaderBox textareafix", rows = "5" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.ShippingAddress, new { @class = "form-control HeaderBox textareafix", rows = "5" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ExpectedDeliveryDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ExpectedDeliveryDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                            @Html.ValidationMessageFor(model => model.ExpectedDeliveryDateFormatted, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="form-group col-md-4">
                    <div class="col-md-12">
                        <div class="col-md-12  ">&nbsp;</div>
                        <div class="col-md-12  ">&nbsp;</div>
                    </div>
                    <div class="form-group col-md-12 box-header figuresummary rounded">
                        <div class="form-group col-md-12">
                            <div class="rightAmtCaption">Sales Order Status</div>
                        </div>
                        <div class="form-group col-md-12">
                            <div class="lblStatusDisplay" id="lblReqStatus">Open</div>
                        </div>
                        @*<div class="form-group col-md-12">
                                <div class="rightAmtCaption">Approval Status</div>
                            </div>
                            <div class="form-group col-md-12">
                                <div class="lblStatusDisplay" id="lblApprovalStatus">N/A</div>
                            </div>*@
                    </div>
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })
                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>


            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>
            <div class="col-md-12" style="padding-bottom:3px">
                <div class="col-md-10">
                </div>
                <div class="col-md-2">
                    <a class="btn btn-openid" onclick="ShowSalesOrderDetailsModal()" id="btnAddSalesOrderItems" style="color:white;font-weight:bold;float:right"><i class="glyphicon glyphicon-plus"></i> Add Item </a>
                </div>
            </div>
            <div class="col-md-12">
                <table id="tblSalesOrderDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" style="width:100%">
                    <thead>
                        <tr class="text-center TableHead">
                            <th>ID</th>
                            <th>ProductID</th>
                            <th>Sl. No</th>
                            <th>Product</th>
                            <th>GST %</th>
                            <th>Qty</th>
                            <th>Rate</th>
                            <th>Gross Amt</th>
                            <th>Disc Amt</th>
                            <th>Tax Amt</th>
                            <th>Net Amt</th>
                            <th>Expt. Delivery Date</th>
                            <th>...</th>
                        </tr>
                    </thead>
                </table>
            </div>

            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General Notes</div>
            <div class="col-md-12">
                <div class="form-group col-md-8">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control HeaderBox", rows = "8" })
                    </div>
                </div>

            </div>



            <div>
                @Html.Partial("_Fileupload")
            </div>
            <div class="col-md-12  ">&nbsp;</div>
            <div class="col-md-12  ">&nbsp;</div>
        }
    </div>
</section>

<!-- Modal Edit Sales Order Details Modal -->
<div class="modal fade bs-example-modal-lg" id="SalesOrderDetailsModal" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:900px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 40px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <div class="col-md-12 modelIcon">
                            <h3 class="modal-title" id="modelContextLabel">Add Sales Order Details</h3>
                        </div>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.Product.ID, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.SalesOrderDetail.ProductID, Model.SalesOrderDetail.Product.ProductSelectList, "--Select Customer--", new { @class = "form-control BlockEnter", @Style = "width:100%", @id = "ProductID" })
                        </div>
                    </div>
                    <div class="col-md-12 headSeperator"></div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.Product.Name, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.Product.Name, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.Product.HSNNo, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.Product.HSNNo, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.UnitCode, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.UnitCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.ExpectedDeliveryDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.ExpectedDeliveryDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.SalesOrderDetail.Rate, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.SalesOrderDetail.Quantity, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.SalesOrderDetail.Rate, new { htmlAttributes = new { @class = "form-control HeaderBox text-right Calculation", onkeypress = "return isNumber(event)" } })
                        </div>
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.SalesOrderDetail.Quantity, new { htmlAttributes = new { @class = "form-control text-right Calculation", onkeypress = "return isNumber(event)" } })
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.GrossAmount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.GrossAmount, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.DiscountPercent, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.DiscountPercent, new { htmlAttributes = new { @class = "form-control text-right Calculation", onkeypress = "return isNumber(event)", onfocus = "SelectAllValue(this);" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.TradeDiscountAmount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.TradeDiscountAmount, new { htmlAttributes = new { @class = "form-control text-right Calculation", onkeypress = "return isNumber(event)", onkeyup = "ClearDiscountPercentage();", onfocus = "SelectAllValue(this);" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.TaxableAmount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.TaxableAmount, new { htmlAttributes = new { @class = "form-control text-right", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.TaxTypeCode, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.Action("TaxTypeDropdown", "TaxType")
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.TaxAmount, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.TaxAmount, new { htmlAttributes = new { @class = "form-control HeaderBox text-right", @disabled = "disabled" } })
                        </div>
                    </div>


                    <div class="col-md-4">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SalesOrderDetail.NetAmount, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.SalesOrderDetail.NetAmount, new { htmlAttributes = new { @class = "form-control text-right", @disabled = "disabled" } })
                        </div>
                    </div>

                </div>
            </div>
            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a class="btn btn-info" onclick="AddSalesOrderDetails()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/SalesOrder/AddSalesOrder")
}

