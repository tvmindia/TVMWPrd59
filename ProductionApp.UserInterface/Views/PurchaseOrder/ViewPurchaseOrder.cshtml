@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.PurchaseOrderAdvanceSearchViewModel
@{
    ViewBag.Title = "ViewPurchaseOrder";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i> Purchase Order</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<section class="content">
    <div class="row">
        <div class="" id="" style="min-height:25px">

            @{
                var data = new { actionType = "List" };
                @Html.Action("ChangeButtonStyle", "PurchaseOrder", data);
            }
        </div>
    </div>
    <div class="row summaryboxes">
        <div class="clearfix visible-sm-block"></div>
    </div>
    <div class="row">
        &nbsp;
    </div>

    <div class="row tableContainer">
        <div class="form-group col-md-8">
            <div class="col-md-12">
                @Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                </div>
                <div class="col-md-2">
                    <input type="button" value="Search" onclick="BindOrReloadPurchaseOrderTable('Search')" />
                </div>
            </div>
        </div>
    </div>
    @*Advance Filter *@
    <div class="col-md-12">
        <div class="row">
            &nbsp;
            <p id="filter" style="float:right;font-size:small"><i class="fa fa-filter" aria-hidden="true" style="color:purple"></i><a href="#" class="accordion" data-toggle="collapse" data-target="#demo">Advanced Filter</a></p>

            <div id="demo" class="collapse" style="border-top:1px solid #d9d9d9">
                <div class="col-md-12">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3" } })
                        </div>
                    </div>

                    <div class="col-md-5">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="col-md-5">
                        @Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @Html.Action("SupplierDropdown", "Supplier")
                        </div>
                    </div>

                    <div class="col-md-5">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        <div class="col-md-12">
                            @{
                                List<SelectListItem> selectListItem = new List<SelectListItem>();
                                selectListItem.Add(new SelectListItem
                                { Text = "Open", Value = "Open", Selected = false });
                                selectListItem.Add(new SelectListItem
                                { Text = "Closed", Value = "Closed", Selected = false });
                                selectListItem.Add(new SelectListItem
                                { Text = "-------Select Status-------",Value="", Selected = true });
                            }
                            @Html.DropDownListFor(model => model.Status, selectListItem, new { @class = "form-control BlockEnter", value = 0, style = "padding:4px 12px; width:480px" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        <a class="btn btn-primary" style="right:-750px;margin-top:20px" onclick="BindOrReloadPurchaseOrderTable('Apply')">Apply</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    &nbsp;
    <div class="col-md-12">
        <table id="tblPurchaseOrder" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
            <thead>
                <tr class="text-center TableHead">
                    <th>ID</th>
                    <th>PurchaseOrder No</th>
                    <th>PurchaseOrder Date</th>
                    <th>Order issued Date</th>
                    <th>Supplier</th>
                    <th>Purchase Order Status</th>
                    <th>Purchase Order Title</th>
            </thead>
        </table>
    </div>

</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/PurchaseOrderJS/ViewPurchaseOrder")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
}