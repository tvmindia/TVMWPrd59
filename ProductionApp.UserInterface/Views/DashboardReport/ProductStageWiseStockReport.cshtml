@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.ProductStageWiseStockReportViewModel

@{
    ViewBag.Title = "Product StageWise Stock Report";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";

}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
}

<style>
    table.dataTable tr.odd {
        background-color: #ebf2f5;
    }

    table.dataTable tr.even {
        background-color: white;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 20px !important;
    }
</style>

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i>Reports</a></li>
        <li class="active">Product StageWise Stock Report</li>
    </ol>
</div>
<section class="content">
    <div class="form-horizontal">
        <div class="col-md-9" style="margin-top:10px;">

            <div class="col-md-8">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    <div class="input-group">
                        @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "SearchTerm", @onkeypress = "RedirectSearchClick(event,this)" } })
                        <div class="input-group-btn">
                            <button class="btn btn-primary" type="submit" style="height:27.5px" onclick="BindOrReloadProductstagewiseStockTable('Search')"><i class="glyphicon glyphicon-search"></i></button>
                        </div>
                    </div>
                </div>

                
            </div>
            <div class="col-md-4">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.ProductID, Model.Product.ProductSelectList, "--Select Product--", new { @class = "form-control BlockEnter", style = "width:100%", @id = "Product",@onchange= "BindOrReloadProductstagewiseStockTable('Apply');" })
                </div>

            </div>


        </div>

        <div class="col-md-3" style="min-height:25px">
            @{
                var data = new { actionType = "List" };
                @Html.Action("ChangeButtonStyle", "DashboardReport", data);
            }
        </div>
    </div>
  
    <div class="col-md-12">&nbsp;</div>
        <div class="col-md-12">
            <table id="tblProductStagewiseStockReport" class="table stripe" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">  
                        <th>ID</th>                     
                        <th>Component</th>
                        <th>Stage</th>                      
                        <th>Current Stock</th>
                    </tr>
                </thead>                
            </table>
            <div><label id="lblMessage" style="font-size:18px;text-align:center;padding-left:360px;">Please select product to view this Report</label></div>
        </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/Report/ProductStageWiseStockReport")
}