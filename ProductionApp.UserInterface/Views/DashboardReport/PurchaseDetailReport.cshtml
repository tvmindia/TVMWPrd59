@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.PurchaseDetailReportViewModel

@{
    ViewBag.Title = "Purchase Detail Report";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
}

<style>
    table.dataTable tr.odd {
        background-color: white;
    }

    table.dataTable tr.even {
        background-color: white;
    }

    .select2-container--default .select2-selection--single .select2-selection__rendered {
        line-height: 20px !important;
    }
</style>

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-cogs"></i>Reports</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<section class="content">

    <div class="form-horizontal">
        <div class="col-md-9" style="margin-top:10px;">

            <div class="col-md-9">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.SearchTerm, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    <div class="input-group">
                        @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control HeaderBox", @id = "SearchTerm", @onkeypress = "RedirectSearchClick(event,this)" } })
                        <div class="input-group-btn">
                            <button class="btn btn-primary" type="submit" style="height:27.5px" onclick="BindOrReloadPurchaseDetailTable('Search')"><i class="glyphicon glyphicon-search"></i></button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.DateFilter, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    @{
                        List<SelectListItem> PurchaseDateRange = new List<SelectListItem>();
                        //RequisitionDateRange.Add(new SelectListItem
                        //{ Text = "ALL", Value = "0" });
                        PurchaseDateRange.Add(new SelectListItem
                        { Text = "Last 30 Days", Value = "30" });
                        PurchaseDateRange.Add(new SelectListItem
                        { Text = "Last 60 Days", Value = "60" });
                        PurchaseDateRange.Add(new SelectListItem
                        { Text = "Last 90 Days", Value = "90" });
                    }
                    @Html.DropDownListFor(model => model.DateFilter, PurchaseDateRange, "---  Filter  ---", new { @class = "form-control", style = "padding:4px 12px;", @onchange = "DateFilterOnchange('Apply');" })
                </div>
            </div>

        </div>

        <div class="col-md-3" style="min-height:25px">
            @{
                var data = new { actionType = "List" };
                @Html.Action("ChangeButtonStyle", "DashboardReport", data);
            }
        </div>
    </div>



    <div class="row">
        <div class="form-group col-md-12" style="padding-top:5px;">
            @*Advance Filter *@
            <div class="col-md-12">
                <p id="filter" style="float:right;font-size:small"><i class="fa fa-filter advanceFilterLink" aria-hidden="true"></i>&nbsp;<a href="#demo" class="accordion" data-toggle="collapse" aria-expanded="false" aria-controls="demo">Advanced Filter</a></p>
            </div>
        </div>
    </div>


    <div class="row tableContainer">
        <div class="form-group col-md-12 collapse" id="demo">
            <div style="border-top:1px solid #d9d9d9;margin-left: 15px;" class="form-group col-md-12"></div>

            <div class="col-md-12">
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @id = "FromDate" } })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control datepicker HeaderBox BlockEnter col-md-3", @id = "ToDate" } })
                    </div>
                </div>    
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> PurchaseOrderStatus = new List<SelectListItem>();
                            PurchaseOrderStatus.Add(new SelectListItem
                            { Text = "Open", Value = "Open" });
                            PurchaseOrderStatus.Add(new SelectListItem
                            { Text = "Closed", Value = "Closed" });
                        }
                        @Html.DropDownListFor(model => model.Status, PurchaseOrderStatus, "--Select Status--", new { @class = "form-control", style = "padding:4px 12px;", @id = "POStatus" })
                    </div>
                </div>  
                
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ApprovalStatus, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.ApprovalStatus, Model.Approval.StatusSelectList, "--Select Status--", new { @class = "form-control BlockEnter", style = "width:100%", @id = "ApprovalStatus" })
                    </div>
                </div>
                
                
                          

            </div>

            <div class="col-md-12">
                
                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.SupplierID, Model.Supplier.SelectList, "--Select Supplier--", new { @class = "form-control BlockEnter", style = "width:100%", @id = "Supplier" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.MaterialID, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.DropDownListFor(model => model.MaterialID, Model.Material.SelectList, "--Select Material--", new { @class = "form-control BlockEnter", style = "width:100%", @id = "Material" })
                    </div>
                </div>



                <div class="col-md-3">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.DeliveryStatus, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @{
                            List<SelectListItem> DeliveryStatusList = new List<SelectListItem>();
                            DeliveryStatusList.Add(new SelectListItem
                            { Text = "Delivered", Value = "Delivered" });
                            DeliveryStatusList.Add(new SelectListItem
                            { Text = "Not Delivered", Value = "Not Delivered" });
                            DeliveryStatusList.Add(new SelectListItem
                            { Text = "Partially Delivered", Value = "Partially Delivered" });
                        }
                        @Html.DropDownListFor(model => model.DeliveryStatus, DeliveryStatusList, "--Select Status--", new { @class = "form-control", style = "padding:4px 12px;", @id = "DelStatus" })
                    </div>
                </div>
                

                <div class="col-md-2">
                    <a class="btn btn-primary" style="right:-750px;margin-top:20px" onclick="BindOrReloadPurchaseDetailTable('Apply')">Apply</a>
                </div>


            </div>
        </div>
    </div>

    <div class="col-md-12">
        <table id="tblPurchaseDetailReport" class="table stripe" cellspacing="0" width="100%">
            <thead>
                <tr class="text-center TableHead">
                    <th>ID</th>
                    <th>PO No</th>
                    <th>PO Date</th>
                    <th>Supplier</th>
                    <th>PO Status</th>
                    <th>Item</th>
                    <th>Unit</th>
                    <th>Ordered Qty</th>
                    <th>Delivered Qty</th>    
                    <th>Approval status</th>               
                    <th>Delivery Status</th>                    
                </tr>
            </thead>
        </table>
    </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/Report/PurchaseDetailReport")
}






