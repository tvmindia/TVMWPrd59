@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.AssemblyViewModel
@{
    if (Model.IsUpdate)
    {
        ViewBag.Title = "Edit Assembly";
    }
    else
    {
        ViewBag.Title = "New Assembly";
    }
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("NewAssembly", "Assembly", new { Code = "PROD" })"><i class="fa fa-cogs"></i>Assemble Products</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-6" style="text-align:left">
            <span id="lblEntryNo" class="SCHeader">Entry No. # : New</span>
        </div>
        <div class="col-md-6" id="divbuttonPatchAssembly" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "Assembly", data);
            }
        </div>
    </div>
    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
        @using (Ajax.BeginForm("InsertUpdateAssembly", "Assembly", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessAssembly", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnServerCallBegin", OnComplete = "OnServerCallComplete" }, new { @class = "form-horizontal", role = "form", @id = "AssemblyForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
            <div class="col-md-12">
                <div class="form-group col-md-8">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.EntryNo, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.EntryNo, new { htmlAttributes = new { @class = "form-control HeaderBox ", @disabled = "disabled", @placeholder = "Autogenerated" } })
                            @Html.ValidationMessageFor(model => model.EntryNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12"></div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.AssemblyDate, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AssemblyDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                            @Html.ValidationMessageFor(model => model.AssemblyDateFormatted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.AssembleBy, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12"id="divAssemblyDropdown">
                            @Html.Action("AssembleDropdown", "Employee", new { required = "" })
                        </div>
                    </div>
                    <div class="col-md-12"></div>
                    <div class="form-group col-md-12">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12" style="padding-right:31px">
                            @Html.DropDownListFor(model => model.ProductID, Model.Product.ProductSelectList, "--Select Product--", new { @class = "form-control BlockEnter", style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12"></div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Qty, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control HeaderBox Amount" } })
                            @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6" style="padding-top:22px">
                        <div class="col-md-12">
                            <a class="btn btn-openid" onclick="LoadComponentDetail()" id="btnLoadComponentList" style="color:white;font-weight:bold;float:right;width:100%;"><i class="glyphicon glyphicon-refresh"></i> Show/Refresh Components</a>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group" hidden="hidden">
                <div class="col-md-offset-2 col-md-10">
                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        }
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Components List</div>
        <div class="col-md-12" style="padding-left: 33px;">
            @*<div class="col-md-12">*@
                <table id="tblComponentList" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" style="width:100%">
                    <thead>
                        <tr class="text-center TableHead">
                            <th>Component</th>
                            <th>BOM Qty</th>
                            <th>Current Stock</th>
                            <th>Qty Reqd. To Assemble</th>
                            <th>Balance Stock</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                </table>
            @*</div>*@
        </div>
     </div>
</section>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/Assembly/NewAssembly")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
}

