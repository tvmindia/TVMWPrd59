@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.MaterialReceiptViewModel

@{
    ViewBag.Title = "New Material Receipt";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableSelect")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatablecheckbox")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}


<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Index", "Home")><i class="fa fa-home"></i> Home</a></li>
        <li><a href=@Url.Action("Index", "DashboardStore", new { code = "STR" })>Store</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>

<section class="content">
    <div class="row">
        <div class="col-md-6">
            <span id="lblReceiptNo" class="SCHeader"></span>
        </div>
        <div class="col-md-6" id="divButtonPatch" style="min-height:25px">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "MaterialReceipt", data);
            }
        </div>
    </div>


    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>

        @using (Ajax.BeginForm("InsertUpdateMaterialReceipt", "MaterialReceipt", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnServerCallBegin", OnComplete = "OnServerCallComplete" }, new { @class = "form-horizontal", role = "form", @id = "MaterialReceiptForm" }))
        {
            <div class="form-group col-md-12">
                @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })

                <div class="form-group col-md-12"></div>
                <div class="form-group col-md-4">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ReceiptDate, htmlAttributes: new { @class = "control-label lblrequired" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ReceiptDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                        @Html.ValidationMessageFor(model => model.ReceiptDateFormatted, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ReceiptNo, htmlAttributes: new { @class = "control-label lblrequired" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.ReceiptNo, new { htmlAttributes = new { @class = "form-control HeaderBox ", @autofocus = true, onkeyup = "ReceiptNoOnChange(this);" } })
                        @Html.ValidationMessageFor(model => model.ReceiptNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Supplier, htmlAttributes: new { @class = "control-label lblrequired" })
                    </div>
                    <div class="col-md-12">
                        @Html.HiddenFor(model => model.SupplierID, htmlAttributes: new { @id= "hdnSupplierID" })
                        <div id="divSupplierDropdown">
                            @Html.Action("SupplierDropdown", "Supplier")
                        </div>
                        <span class="text-danger" id="msgSupplier" style="display:none;">* Supplier not Selected</span>
                    </div>
                </div>
                <div class="form-group col-md-12">&nbsp;</div>
                <div class="form-group col-md-4">
                    <div class="col-md-12 ">
                        @Html.Label("Load From Existing Purchase Order", htmlAttributes: new { @class = "control-label" })
                        @*@Html.CheckBox("IsExisting", htmlAttributes: new { @class = "checkbox-inline", @OnChange = "ExistingPurchaseOrderOnCheckChanged()", @checked = "checked" })*@
                    </div>
                    <div class="col-md-12">
                        @{ 
                            List<SelectListItem> yesNoList = new List<SelectListItem>();
                            yesNoList.Add(new SelectListItem
                            { Text = "Yes", Value = "YES" });
                            yesNoList.Add(new SelectListItem
                            { Text = "No", Value = "NO" });
                        }
                        @Html.DropDownList("ExistingPurchaseOrder", yesNoList, htmlAttributes: new { @class = "form-control BlockEnter", @OnChange = "ExistingPurchaseOrderChanged()" })
                    </div>
                </div>
                <div class="form-group col-md-4">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.PurchaseOrderNo, htmlAttributes: new { @class = "control-label lblrequired " })
                        @Html.HiddenFor(model => model.PurchaseOrderID, htmlAttributes: new { @id= "hdnPurchaseOrderID" })
                    </div>
                    <div class="col-md-12" id="divPONo">
                        @Html.EditorFor(model => model.PurchaseOrderNo, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                    </div>
                    <div class="col-md-12" id="divPOID">
                        @Html.Editor("PurchaseOrderNo", Model.PurchaseOrderNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled" } })
                    </div>
                    <div class="col-md-12">
                        <span class="text-danger" id="msgPurchase" style="display:none;">* Purchase Order not Selected / Entered</span>
                    </div>
                </div>
            </div>

            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-yellow" aria-hidden="true"></i> Item Details</div>

            <div class="col-md-12" style="padding-bottom:3px">
                <div class="col-md-6"></div>
                <div class="col-md-4">
                    <a class="btn btn-openid" onclick="LoadPODetail()" id="btnLoadPO" style="color:white;font-weight:bold;float:right;"><i class="fa fa-arrow-down"></i> Load PO Items</a>@*margin-left:70px;*@
                </div>
                <div class="col-md-2">
                    <a class="btn btn-openid" onclick="AddMaterialReceiptDetail()" style="color:white;font-weight:bold;float:right;"><i class="fa fa-plus"></i> Add New Item</a>@*//margin-left:20px;*@
                </div>
            </div>


            <table id="tblMaterialReceiptDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                <thead>
                    <tr class="text-center TableHead">
                        <th>ID</th>
                        <th>MaterialID</th>
                        <th>Material</th>
                        <th>Description</th>
                        <th>Quantity In KG</th>
                        <th>Quantity In Nos.</th>
                        @*<th>Unit</th>*@
                        <th>...</th>
                </thead>
            </table>


            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Description</div>
            <div class="form-group col-md-12">
                <div class="form-group col-md-8">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label " })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.GeneralNotes, new { htmlAttributes = new { @class = "form-control HeaderBox", @rows = 7 } })
                    </div>
                </div>
            </div>

            <div class="form-group" hidden="hidden">
                <div class="col-md-offset-2 col-md-10">
                    @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })
                    <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>

        }

    </div>
</section>

<div class="modal fade bs-example-modal-lg" id="MaterialReceiptDetailModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:900px !important;">
        <div class="modal-content" style="margin-top:4%;">
            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 40px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <div class="col-md-12 modelIcon">
                            <h3 class="modal-title" id="modelContextLabel">Add Material Receipt Detail</h3>
                        </div>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>

            <div class="modal-body">
                <div class="container-fluid">
                    <div class="form-group col-md-6">

                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.MaterialID, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            <div id="divRawMaterialDropdown">
                                @{Html.RenderAction("MaterialDropdown", "Material", Model.MaterialReceiptDetail.Material); }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12 headSeperator"></div>
                    @Html.HiddenFor(model => model.MaterialReceiptDetail.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
                    @Html.Hidden("WeightInKG", Model.MaterialReceiptDetail.Material.MaterialCode, htmlAttributes: new { @id= "WeightInKG" })
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.Material.MaterialCode, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.Material.MaterialCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.Material.CurrentStock, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.Material.CurrentStock, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.QtyInKG, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.QtyInKG, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.Qty, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.Qty, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                        </div>
                    </div>
                    @*<div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.UnitCode, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.UnitCode, new { htmlAttributes = new { @class = "form-control BlockEnter", @disabled = "disabled", @value = "Nos." } })
                        </div>
                    </div>*@
                    <div class="col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.MaterialReceiptDetail.MaterialDesc, htmlAttributes: new { @class = "control-label " })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.MaterialReceiptDetail.MaterialDesc, new { htmlAttributes = new { @class = "form-control", @rows = 4 } })
                        </div>
                    </div>

                </div>
            </div>

            <div class="modal-footer" style="height: 50px;padding: 7px;">
                @*<a class="btn btn-primary" onclick="SaveMaterialReceiptDetail()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>*@
                <a class="btn btn-primary" onclick="AddMaterialReceiptDetailToTable()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>
            </div>


        </div>
    </div>
</div>


<div class="modal fade bs-example-modal-lg" id="PurchaseOrderDetailsModal" tabindex="-1" role="dialog" data-backdrop="static" data-keyboard="false" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document" style="min-width:1150px !important;">
        <div class="modal-content" style="margin-top:4%;">

            <div class="modal-header" style="background-image: url('');background-repeat: repeat;height: 40px;padding: 3px;border-bottom:2px solid rgb(91, 192, 222)!important;">
                <div class="container-fluid" style="padding-right: 0px;">
                    <div class="col-md-9">
                        <div class="col-md-12 modelIcon">
                            <h3 class="modal-title " id="modelContextLabel">Load Purchase Order Detail Items</h3>
                        </div>
                    </div>
                    <div class="col-md-3" style="padding-right: 4px;">
                        <a class="close" data-dismiss="modal" aria-label="Close"><i style="font-size: 33px;" class="fa fa-times-circle" aria-hidden="true"></i></a>
                    </div>
                </div>
            </div>

            <div class="modal-body">
                <div class="container-fluid">
                    <div class="col-md-12">&nbsp;</div>
                    <div class="col-md-12">&nbsp;</div>
                    <div class="tab-content clearfix">
                        <div class="tab-pane fade in active">
                            <table id="tblPurchaseOrderDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                                <thead>
                                    <tr class="text-center">
                                        <th>ID</th>
                                        <th></th>
                                        <th>MaterialID</th>
                                        <th>Material Code</th>
                                        <th>Description</th>
                                        <th>PO Qty</th>
                                        <th>PO Unit</th>
                                        <th>Prev. Recvd. Qty</th>
                                        <th>Curr. Recvd. Qty</th>
                                        @*<th>Recvd. Unit</th>*@
                                </thead>
                            </table>
                        </div>
                    </div>


                </div>
            </div>

            <div class="modal-footer" style="height: 50px;padding: 7px;">
                <a id="btnAddPOItems" class="btn btn-primary" onclick="AddPOItems()"><i class="glyphicon glyphicon-floppy-disk"></i> Add</a>
            </div>

        </div>
    </div>
</div>
@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatable")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableButtons")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/datatableSelect")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/MaterialReceiptJS/NewMaterialReceipt")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
}
