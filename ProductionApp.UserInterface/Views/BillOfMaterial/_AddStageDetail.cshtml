@model ProductionApp.UserInterface.Models.BillOfMaterialViewModel


@using (Ajax.BeginForm("InsertUpdateBOMComponentLineStageDetail", "BillOfMaterial", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveDetailSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnServerCallBegin", OnComplete = "OnServerCallComplete" }, new { @class = "form-horizontal", role = "form", @id = "BOMStageDetailForm" }))
{
    <div class="col-md-12">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control HeaderBox ", @disabled = "disabled" } })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLine.Product, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-12">
                @Html.HiddenFor(model => model.BOMComponentLine.ID)
                @Html.HiddenFor(model => model.BOMComponentLine.ComponentID)
                @Html.EditorFor(model => model.BOMComponentLine.Product.Name, new { htmlAttributes = new { @class = "form-control HeaderBox ", @disabled = "disabled" } })
            </div>
        </div>
        <div class="col-md-12"></div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.ComponentLineID, htmlAttributes: new { @class = "control-label lblrequired" })
                @{
                    List<SelectListItem> LineList = new List<SelectListItem>();
                    for (int i = 0; i < Model.BOMComponentLineList.Count; i++)
                    {
                        LineList.Add(new SelectListItem
                        { Text = Model.BOMComponentLineList[i].LineName, Value = Model.BOMComponentLineList[i].ID.ToString() });
                    }
                }
            </div>
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.BOMComponentLineStageDetail.ComponentLineID, LineList, new { @class = "form-control BlockEnter", style = "padding:4px 12px;" })
                @Html.ValidationMessageFor(model => model.BOMComponentLineStageDetail.ComponentLineID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.StageID, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                <div id="divStageList">
                </div>
                @Html.HiddenFor(model => model.BOMComponentLineStageDetail.StageID)
                @Html.ValidationMessageFor(model => model.BOMComponentLineStageDetail.StageID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
    <div class="col-md-12"></div>

    <div class="col-md-6" style="border-right:1px solid silver">

        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Input / Output for selected stage</div>

        <div class="form-group col-md-6">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.EntryType, htmlAttributes: new { @class = "control-label lblrequired" })
                @{
                    List<SelectListItem> EntryTypeList = new List<SelectListItem>();
                    EntryTypeList.Add(new SelectListItem
                    { Text = "Input", Value = "Input" });
                    EntryTypeList.Add(new SelectListItem
                    { Text = "Output", Value = "Output" });
                }
            </div>
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.BOMComponentLineStageDetail.EntryType, EntryTypeList, new { @class = "form-control BlockEnter ", @autofocus = true })
            </div>
        </div>

        <div class="form-group col-md-6">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.PartType, htmlAttributes: new { @class = "control-label lblrequired" })
                @{
                    List<SelectListItem> ItemType = new List<SelectListItem>();
                    ItemType.Add(new SelectListItem
                    { Text = "Raw Material", Value = "RAW", Selected = true });
                    ItemType.Add(new SelectListItem
                    { Text = "Sub Component", Value = "SUB" });
                    ItemType.Add(new SelectListItem
                    { Text = "Component", Value = "COM" });
                }
            </div>
            <div class="col-md-12">
                @Html.DropDownListFor(model => model.BOMComponentLineStageDetail.PartType, ItemType, new { @class = "form-control BlockEnter", style = "padding:4px 12px;" })
                @Html.ValidationMessageFor(model => model.BOMComponentLineStageDetail.PartType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.PartID, htmlAttributes: new { @class = "control-label lblrequired" })
                @Html.HiddenFor(model => model.BOMComponentLineStageDetail.PartID, new { @value = -1 })
            </div>
            <div class="" id="divItemSelector">
                <div class="col-md-12" id="divRawMaterialDropdown">
                    @{Html.RenderAction("MaterialDropdown", "Material", Model.BOMComponentLineStageDetail.Material); }
                </div>
                <div class="col-md-12" id="divSubComponentDropdown">
                    @{Html.RenderAction("SubComponentDropdown", "SubComponent", Model.BOMComponentLineStageDetail.SubComponent); }
                </div>
                <div class="col-md-12" id="divProductDropdown">
                    @*@Html.DropDownListFor(model => model.BOMComponentLineStageDetail.Product.ID, Model.BOMComponentLineStageDetail.Product.ProductSelectList, "--Select product--", new { @class = "form-control", @required = "", @title = "The Product is missing", @style = "width:100%!important", @id = "ProductID" })*@
                    @{Html.RenderAction("ProductDropdown", "Product", new { required = "" }); }
                </div>
                @Html.ValidationMessageFor(model => model.BOMComponentLineStageDetail.PartID, "", new { @class = "text-danger" })
                
                <span id="lblPartID" class="text-danger">Item Required</span>
            </div>
        </div>

        <div class="form-group col-md-12">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLineStageDetail.Qty, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.BOMComponentLineStageDetail.Qty, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = -1 } })
                @Html.ValidationMessageFor(model => model.BOMComponentLineStageDetail.Qty, "", new { @class = "text-danger" })
                <span id="lblQty" class="text-danger">Quantity required</span>
            </div>
        </div>

        <div hidden="hidden">
            <input type="submit" id="btnSave" value="Create" class="btn btn-default" />
        </div>
        <div class="col-md-12">
            <a class="btn btn-openid" onclick="SaveDetail()" style="color:white;font-weight:bold;float:right;margin-top:28px;">&nbsp;&nbsp; Save &nbsp;&nbsp;<i class="fa fa-save"></i>&nbsp;&nbsp; </a>@*//margin-left:20px;*@
        </div>
    </div>
    @Html.HiddenFor(model => model.BOMComponentLineStageDetail.ID)
    @Html.HiddenFor(model => model.BOMComponentLineStageDetail.IsUpdate)
                        }
<div class="col-md-6">
    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-green" aria-hidden="true"></i> Stage Details:</div>

    <div class="col-md-12" style="height:214px;">
        <table id="tblBOMComponentLineStageDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
            <thead>
                <tr class="text-center TableHead">
                    <th>ID</th>
                    <th>ComponentLineID</th>
                    <th>Stage</th>
                    <th>In/Out</th>
                    <th>Item Type</th>
                    <th>Item Name</th>
                    <th>Qty</th>
                    <th>...</th>
                </tr>
            </thead>
        </table>
    </div>


    <div class="col-md-2">&nbsp;</div>
    <div class="col-md-5">
        <a class="btn btn-openid" onclick="GoBack()" style="color:white;font-weight:bold;">&nbsp;&nbsp;<i class="fa fa-angle-double-left"></i>&nbsp; Back&nbsp;&nbsp; </a>@*//margin-left:20px;*@
    </div>
    <div class="col-md-5">
        <a class="btn btn-openid" onclick="LoadPartialAddComponent()" style="color:white;font-weight:bold;float:right;">Go To Component <i class="fa fa-backward"></i> </a>@*//margin-left:20px;*@
    </div>

</div>

<script>
    $(document).ready(function () {
        $.validator.unobtrusive.parse("#BOMStageDetailForm");
        debugger;

        LoadStageDetailTable();

        $('#BOMComponentLineStageDetail_PartType').change(function () {
            PartTypeOnChange($(this).val());
        }).trigger('change');

        $("#BOMComponentLineStageDetail_EntryType").change(function () {
            EntryTypeOnChange($(this).val());
        }).trigger('change');

        $('#BOMComponentLineStageDetail_ComponentLineID').change(function () {
            var StageID = $('#BOMComponentLineStageDetail_StageID').val();
            LoadPartialStageDropdownForLine(StageID);
            ComponentLineOnChange($(this).val());
        }).trigger('change');

        $('#MaterialID,#ProductID,#SubComponentID').change(function () {
            $('#BOMComponentLineStageDetail_PartID').val($(this).val());
        });

        $('#MaterialID').select2({
            dropdownParent: $("#divRawMaterialDropdown")
        });

        //$('#ProductID,#SubComponentID').select2({});

        $('#lblPartID,#lblQty').hide();

        OnServerCallComplete();
    });
</script>