@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.MaterialReturnViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}
@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatable")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/DataTables/css/datatableButtons")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/select2")
}
<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("NewMaterialReturn", "MaterialReturn", new { Code = "STR" })"><i class="fa fa-cogs"></i> New Material Return</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>
<section class="content">
    <div class="row" id="OverlayHeader">
        <div class="col-md-6" style="text-align:left">
            <span id="lblReturnSlipNo" class="SCHeader">Return To Supplier# : New</span>
        </div>
        <div class="col-md-6" id="divbuttonPatchReturnToSupplier" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "MaterialReturn", data);
            }
        </div>
    </div>

    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
        @using (Ajax.BeginForm("InsertUpdateReturnToSupplier", "MaterialReturn", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccessIssueToProduction", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "", OnComplete = "" }, new { @class = "form-horizontal", role = "form", @id = "ReturnToSupplierForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })

            <div class="form-group col-md-12">
                <div class="form-group col-md-8">
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReturnSlipNo, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ReturnSlipNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled", @placeholder = "Auto Generated" } })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReturnDateFormatted, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ReturnDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                            @Html.ValidationMessageFor(model => model.ReturnDateFormatted, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.ReturnBy, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                            @Html.DropDownListFor(model => model.ReturnBy, Model.Employee.SelectList, "--Select Employee--", new { @class = "form-control BlockEnter", @Style = "width:100%" })
                            @Html.ValidationMessageFor(model => model.ReturnBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.SupplierID, htmlAttributes: new { @class = "control-label lblrequired" })
                        </div>
                        <div class="col-md-12">
                           @Html.Action("SupplierDropdown", "Supplier")
                        </div>
                    </div>
                </div>
                <div class="form-group col-md-4">

                </div>
            </div>

            <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Item Details</div>

                <div class="col-md-12">
                    <div class="form-group col-md-10">
                    </div>
                    <div class="form-group col-md-2">
                        <a class="btn btn-openid" onclick="ShowIssueToProductionDetailsModal()" id="btnAddReturnToSupplierItems" style="color:white;font-weight:bold;float:left;margin-left:auto"><i class="glyphicon glyphicon-plus"></i> Add Items</a>
                    </div>
                </div>

                <div class="form-group col-md-12">
                    <table id="tblReturnToSupplierDetail" class="table table-striped table-bordered table-hover customgrd" cellspacing="0" width="100%">
                        <thead>
                            <tr class="text-center TableHead">
                                <th>ID</th>
                                <th>MaterialID</th>
                                <th>Sl.No</th>
                                <th>Code</th>
                                <th>Material Description</th>
                                <th>Unit</th>
                                <th>Rate</th>
                                <th>Quantity</th>
                                <th>CGST %</th>
                                <th>SGST %</th>
                                <th>IGST %</th>
                                <th>...</th>
                            </tr>
                        </thead>
                    </table>
                </div>

                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General Notes</div>

                <div class="form-group col-md-8">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.GeneralNotes, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-12">
                        @Html.EditorFor(model => model.GeneralNotes, new { htmlAttributes = new { @class = "form-control HeaderBox", rows = "8" } })
                        @Html.ValidationMessageFor(model => model.GeneralNotes, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group" hidden="hidden">
                    <div class="col-md-offset-2 col-md-10">
                        @Html.HiddenFor(model => model.DetailJSON, htmlAttributes: new { @class = "" })
                        <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
        }
        <div class="col-md-12  ">&nbsp;</div>
        <div class="col-md-12  ">&nbsp;</div>
    </div>



</section>

