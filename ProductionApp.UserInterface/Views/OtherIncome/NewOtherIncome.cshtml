@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.OtherIncomeViewModel

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}


@{
    ViewBag.Title = "New Other Income";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href="/OtherIncome/ViewOtherIncome?code=ACC">Other Income</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>


<section class="content">
    <div class="row">
        <div class="col-md-6">
            <span id="lblRefNo" class="SCHeader"> Entry No#: New</span>
        </div>

        <div class="col-md-6" id="divButtonPatch" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "OtherIncome", data);
            }
        </div>
    </div>


    <div class="row tableContainer">
        <div class="col-md-12">
            @using (Ajax.BeginForm("InsertUpdateOtherIncome", "OtherIncome", new AjaxOptions { HttpMethod = "POST", Confirm = "", OnSuccess = "SaveSuccess", OnFailure = "NetworkFailure", AllowCache = false, LoadingElementId = "", OnBegin = "OnServerCallBegin", OnComplete = "OnServerCallComplete" }, new { @class = "form-horizontal", role = "form", @id = "NewOtherIncomeForm" }))
            {
                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.ID)
                @Html.HiddenFor(model => model.IsUpdate)
                @Html.HiddenFor(model => model.DepositWithdrawalID);
                <div class="col-md-12">
                    <div class="form-group col-md-8">

                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.EntryNo, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.EntryNo, new { htmlAttributes = new { @class = "form-control HeaderBox", @placeholder = "Autogenerated", @disabled = "disabled" } })
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.IncomeDate, htmlAttributes: new { @class = "control-label lblrequired" })
                            </div>
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.IncomeDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @id = "IncomeDate" } })
                                @Html.ValidationMessageFor(model => model.IncomeDateFormatted, "", new { @class = "text-danger" })                              
                            </div>
                        </div>

                        <div class="form-group col-md-12"></div>

                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.AccountCode, htmlAttributes: new { @class = "control-label lblrequired" })
                            </div>
                            <div class="col-md-12" id="divChartOfAccountDropdown">
                                @Html.Action("ChartOfAccountDropdown", "ChartOfAccount", new { required = "", type = "INC" })
                            </div>
                            <div class="col-md-12">
                                @Html.HiddenFor(model => model.AccountCode, htmlAttributes: new { @id = "hdnChartOfAccountCode", @value = string.Empty })
                                <span class="text-danger" id="msgAccountCode" style="display:none;">Account Code Required</span>
                                @*@Html.ValidationMessageFor(model => model.AccountCode, "", new { @class = "text-danger" })*@
                            </div>
                        </div>

                        <div class="form-group col-md-6">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.AccountSubHead, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-12">
                                @Html.DropDownListFor(model => model.AccountSubHead, Model.SelectList, "--Add/Select Sub Head--", htmlAttributes: new { @class = "form-control HeaderBox", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.AccountSubHead, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Payment Details</div>
                    <div class="col-md-12">
                        <div class="form-group col-md-8">
                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentMode, htmlAttributes: new { @class = "control-label" })
                                    @{
                                        List<SelectListItem> paymentModeList = new List<SelectListItem>();
                                        paymentModeList.Add(new SelectListItem
                                        {
                                            Text = "CASH",
                                            Value = "CASH"
                                        });
                                        paymentModeList.Add(new SelectListItem
                                        {
                                            Text = "CHEQUE",
                                            Value = "CHEQUE"
                                        });
                                        paymentModeList.Add(new SelectListItem
                                        {
                                            Text = "ONLINE",
                                            Value = "ONLINE"
                                        });
                                    }
                                </div>
                                <div class="col-md-12">
                                    @Html.DropDownListFor(model => model.PaymentMode, paymentModeList, "--Select Payment Mode--", htmlAttributes: new { @class = "form-control HeaderBox", @OnChange = "PaymentModeOnChanged(this)" })
                                    @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.BankCode, htmlAttributes: new { @class = "control-label", @id = "lblForBankCode" })
                                </div>
                                <div class="col-md-12" id="divBankDropdown">
                                    @Html.Action("BankDropdown", "Bank", new { required = "" })
                                </div>
                                <div class="col-md-12">
                                    @Html.HiddenFor(model => model.BankCode, new { htmlAttributes = new { @id = "hdnBankCode" } })
                                    @*@Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })*@
                                    <span class="text-danger" id="msgBankCode" style="display:none;">Bank Code Required</span>
                                </div>
                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ReferenceBank, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ReferenceBank, new { htmlAttributes = new { @class = "form-control HeaderBox", @disabled = "disabled" } })
                                    @Html.ValidationMessageFor(model => model.ReferenceBank, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.ChequeDate, htmlAttributes: new { @class = "control-label " })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.ChequeDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker", @disabled = "disabled", @id = "ChequeDate" } })
                                    @Html.ValidationMessageFor(model => model.ChequeDateFormatted, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group col-md-12"></div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.PaymentRef, htmlAttributes: new { @class = "control-label ", @id = "lblForPaymentRef" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.PaymentRef, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                                    <span class="text-danger" id="msgPaymentRef" style="display:none;">Payment Ref Required</span>
                                </div>
                            </div>

                            <div class="form-group col-md-6">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label lblrequired" })
                                </div>
                                <div class="col-md-12">
                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control HeaderBox Amount pull-right", onkeypress = "return isNumber(event)" } })
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })                                  
                                </div>
                            </div>

                        </div>

                    </div>

                    <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General Notes</div>
                    <div class="col-md-12">
                        <div class="form-group col-md-8">
                            <div class="form-group col-md-12">
                                <div class="col-md-12">
                                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                </div>
                                <div class="col-md-12">
                                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control HeaderBox textareafix", rows = "5" })
                                </div>
                            </div>
                        </div>
                    </div>

                        <div hidden="hidden">
                            <input id="btnSave" type="submit" value="Create" class="btn btn-default" />
                        </div>
                                        }
        </div>
    </div>

</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jsZip")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/jqueryunobtrusiveajaxvalidate")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/OtherIncome/NewOtherIncome")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
}