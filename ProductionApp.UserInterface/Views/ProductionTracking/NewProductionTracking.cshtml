@using ProductionApp.UserInterface.App_Start
@model ProductionApp.UserInterface.Models.ProductionTrackingViewModel

@{
    ViewBag.Title = "New Production Tracking";
    Layout = "~/Views/Shared/_LayoutPage.cshtml";
}

@section styles {
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Select2")
    @Styles.RenderFormat(SiteKeys.StyleVersion, "~/Content/css/Selectmin")
}


<div style="width:100%;">
    <ol class="breadcrumb">
        <li><a href=@Url.Action("Index", "Home")><i class="fa fa-cogs"></i> Home</a></li>
        <li><a href="#">Production</a></li>
        <li class="active">@ViewBag.Title</li>
    </ol>
</div>

<section class="content">
    <div class="row">
        <div class="col-md-6">
            <span id="lblRefNo" class="SCHeader"></span>
        </div>

        <div class="" id="divButtonPatch" style="min-height:25px;">
            @{
                var data = new { actionType = "Add" };
                @Html.Action("ChangeButtonStyle", "ProductionTracking", data);
            }
        </div>
    </div>

    <div class="row tableContainer">
        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> General</div>
        <div class="form-group col-md-12">
            @Html.HiddenFor(model => model.ID, htmlAttributes: new { @class = "", @value = Guid.Empty })
            @Html.HiddenFor(model => model.IsUpdate, htmlAttributes: new { @class = "" })

            <div class="form-group col-md-4">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.EntryDate, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.EntryDateFormatted, new { htmlAttributes = new { @class = "form-control HeaderBox datepicker" } })
                    @Html.ValidationMessageFor(model => model.EntryDateFormatted, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ForemanID, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.Action("EmployeeDropdown", "Employee", Model.ForemanID)
                    @*@Html.EditorFor(model => model.ForemanID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })*@
                    @Html.ValidationMessageFor(model => model.ForemanID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.ProductionRefNo, htmlAttributes: new { @class = "control-label lblrequired" })
                </div>
                <div class="col-md-12">
                    @Html.EditorFor(model => model.ProductionRefNo, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                    @Html.ValidationMessageFor(model => model.ProductionRefNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-8">
                <div class="col-md-12" >
                    @Html.LabelFor(model => model.ProductionTrackingSearch, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.ProductionTrackingSearch.Value, Model.SelectList, "", new { @class = "form-control BlockEnter", data_placeholder="Search" })
                </div>
            </div>


        </div>

        <div class="col-md-12 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Selected Product/Component/Stage Details</div>
        
        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @*@Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })*@
                @Html.Action("ProductDropdown", "Product", Model.ProductID)
                @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Product.ID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                @Html.ValidationMessageFor(model => model.Product.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.BOMComponentLine, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.BOMComponentLine.ID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                @Html.ValidationMessageFor(model => model.BOMComponentLine.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Stage, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.Stage.ID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })
                @Html.ValidationMessageFor(model => model.Stage.ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ForemanID, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.Action("SubComponentDropdown", "SubComponent", Model.ProductID)
                @*@Html.EditorFor(model => model.ForemanID, new { htmlAttributes = new { @class = "form-control HeaderBox" } })*@
                @Html.ValidationMessageFor(model => model.ForemanID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12"></div>
        <div class="col-md-4 headSeperator" style="border-right:25px solid #f8f8f8"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Accepted Details</div>
        <div class="col-md-4 headSeperator"><i class="fa fa-th ig-aqua" aria-hidden="true"></i> Damaged Details</div>
        <div class="col-md-12"></div>
        <div class="col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.AcceptedQty, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.AcceptedQty, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                @Html.ValidationMessageFor(model => model.AcceptedQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DamagedQty, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.DamagedQty, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                @Html.ValidationMessageFor(model => model.DamagedQty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-12"></div>

        <div class="col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.AcceptedWt, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.AcceptedWt, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                @Html.ValidationMessageFor(model => model.AcceptedWt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="col-md-4">
            <div class="col-md-12">
                @Html.LabelFor(model => model.DamagedWt, htmlAttributes: new { @class = "control-label lblrequired" })
            </div>
            <div class="col-md-12">
                @Html.EditorFor(model => model.DamagedWt, new { htmlAttributes = new { @class = "form-control", onkeypress = "return isNumber(event)", @value = 0 } })
                @Html.ValidationMessageFor(model => model.DamagedWt, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
</section>

@section Scripts {
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/UserJs/ProductionTracking/NewProductionTracking")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/select2")
    @Scripts.RenderFormat(SiteKeys.ScriptVersion, "~/bundles/selectmin")
}